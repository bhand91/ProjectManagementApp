@page
@model ProjectManagementApp.Pages.Members.IndexModel

@{
    ViewData["Title"] = "Users";
}

<h1>Available Users</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method = "get">
    <p>
        Member Name: 
        <input type = "text" name = "SearchString" value="@Model.CurrentFilter" />
        <input type = "submit" value = "Search" class = "btn btn-info"/>
        <a asp-page="./Index">Back to Full List</a>
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Member[0].FirstName)
            </th>
            <th>
                <a asp-page = "./Index" asp-route-sortOrder = "@Model.LastNameSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Member[0].LastName)
                </a>
            </th>
            <th> Projects</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Member) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @{
                    // For each movie, calculate the Average review score and display it
                    // Or display N/A. @:text will display text in HTML. or you can use a <span> tag
                    if(item.ProjectMembers.Count > 0) {
                        int count = item.ProjectMembers.Count();
                        @Html.DisplayFor(modelItem => count);
                    }
                    else
                    {
                        @:N/A
                    }

                }
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.MemberID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.MemberID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.MemberID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Member.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Member.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
    asp-route-sortOrder = "@Model.CurrentSort"
    asp-route-pageIndex ="@(Model.Member.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-default @prevDisabled">
        &larr; Previous
</a>

<a asp-page="./Index"
    asp-route-sortOrder = "@Model.CurrentSort"
    asp-route-pageIndex ="@(Model.Member.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-default @prevDisabled">
        @Model.Member.PageIndex
</a>

<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Member.PageIndex + 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class = "btn btn-default @nextDisabled">
       Next &rarr;
</a>
